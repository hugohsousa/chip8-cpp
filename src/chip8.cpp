#include <iostream>
#include <fstream>
#include <cstring>

#include "chip8.h"

Chip8::Chip8()
{
    // Init font
    //- Font
    uint8_t font[80] = {
        0xF0, 0x90, 0x90, 0x90, 0xF0, /* 0 */
        0x20, 0x60, 0x20, 0x20, 0x70, /* 1 */
        0xF0, 0x10, 0xF0, 0x80, 0xF0, /* 2 */
        0xF0, 0x10, 0xF0, 0x10, 0xF0, /* 3 */
        0x90, 0x90, 0xF0, 0x10, 0x10, /* 4 */
        0xF0, 0x80, 0xF0, 0x10, 0xF0, /* 5 */
        0xF0, 0x80, 0xF0, 0x90, 0xF0, /* 6 */
        0xF0, 0x10, 0x20, 0x40, 0x40, /* 7 */
        0xF0, 0x90, 0xF0, 0x90, 0xF0, /* 8 */
        0xF0, 0x90, 0xF0, 0x10, 0xF0, /* 9 */
        0xF0, 0x90, 0xF0, 0x90, 0x90, /* A */
        0xE0, 0x90, 0xE0, 0x90, 0xE0, /* B */
        0xF0, 0x80, 0x80, 0x80, 0xF0, /* C */
        0xE0, 0x90, 0x90, 0x90, 0xE0, /* D */
        0xF0, 0x80, 0xF0, 0x80, 0xF0, /* E */
        0xF0, 0x80, 0xF0, 0x80, 0x80, /* F */
    };

    // Init PC
    PC = 0x200;

    // Init other registers
    I = 0;
    SP = 0;
    delayt_reg = 0;
    soundt_reg = 0;

    std::memset(framebuffer, false, sizeof(framebuffer));
    std::memmove(&memory[0], font, sizeof(font));
}

bool Chip8::load_rom(std::string path_rom)
{
    // Open rom
    std::ifstream rom(path_rom, std::ios::binary);
    if (!rom)
    {
        std::cerr << " Failed to open\n";
        return false;
    }

    char c;
    for (int i = 0x200; rom.get(c); i++)
    {
        if (i > 0xFFF)
        {
            std::cerr << " The ROM is to big\n";
            return false;
        }
        memory[i] = u_int8_t(c);
    }

    return true;
}

bool Chip8::getPixelData(int pixel)
{
    return framebuffer[pixel];
}
